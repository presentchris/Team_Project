서버 사용법

$$ 와이파이 확인, LTE X 노트북과 같은 와이파이

face_server.py를 연다
skin_model.h5, face_model.h5 파일을 python 실행 루트에 갖다둔다 => 터미널 실행 루트

# # 노트북, 휴대폰 같은 ip의 wifi로 열어야 가능
if __name__ == "__main__":
    app.run(host="*.*.*.*", port=5000, debug=True)

휴대폰과 노트북의 ip가 같아야 된다

host="노트북 ip"
=> cmd열고 ipconfig -> 무선 LAN 어댑터 Wi-Fi : IPv4 주소

    app.run(host="*.*.*.*", port=5000, debug=True)
이부분 고치기
+
android studio에서
SkinAnalysisScreen

suspend fun uploadImage(file: File): Pair<Int, Int> = withContext(Dispatchers.IO) {
    //서버가 열린 주소
    val url = "http://*.*.*.*:5000/predict" -> 여기 서버 주소바꾸기(ip부분만, 뒤에 포트랑/predict는 건드리면 안됨)
    //ok3http 사용
    val client = OkHttpClient()

어플 진단기능
$$ 어플을 실행시키면 LogCat을 킨다. $$
카메라든 앨범이든 사진은 3장이 안되면 제출이 안된다.
그리고 LogCat오른쪽에 결과값이 안나오면 튕긴다.
3개이상의 사진을 골라도 튕긴다.(잘모름)
3장 이상이 되면 가장 첫 사진이 없어진다.
사진을 누르면 사라진다.
진단하기를 하면 결과창이 나옴(db저장 X)

저장
저장하고 홈(?) 버튼을 누르면 DB에 사진과 각종 정보가 올라간다
각종정보:
userID : 개인의 DB에만 연람가능하게 하기위해
time : 날짜별로 연람하기 위해
final_skin : 세장의 복합 피부진단 결과
skin1,2,3 : 사진의 순서대로 건성, 지성 판단결과
face1,2,3 : 사진의 순서대로 얼굴 위치
url1,2,3 : 사진의 firestorage url 주소
